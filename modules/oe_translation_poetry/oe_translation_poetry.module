<?php

/**
 * @file
 * OpenEuropa Translation Poetry module file.
 */

declare(strict_types = 1);

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;

/**
 * Implements hook_entity_base_field_info().
 */
function oe_translation_poetry_entity_base_field_info(EntityTypeInterface $entity_type) {
  if ($entity_type->id() === 'tmgmt_job') {
    $fields = [];
    $fields['poetry_request_id'] = BaseFieldDefinition::create('poetry_request_id')
      ->setLabel(t('The Poetry request ID'))
      ->setDisplayOptions('view', [
        'label' => 'hidden',
        'type' => 'poetry_request_id_formatter',
        'weight' => 20,
      ])
      ->setDisplayOptions('form', [
        'type' => 'poetry_request_id_widget',
        'weight' => 20,
      ]);

    return $fields;
  }
}

/**
 * Implements hook_form_FORM_ID_alter() for the TMGMT content overview form.
 */
function oe_translation_poetry_form_tmgmt_content_translate_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $poetry = \Drupal::service('plugin.manager.tmgmt.translator')->createInstance('poetry');
  $form['actions']['request']['#submit'] = [];
  $form['actions']['request']['#submit'][] = [$poetry, 'submitPoetryTranslationRequest'];
  /** @var \Drupal\tmgmt\JobQueue $job_gueue */
  $job_gueue = \Drupal::service('oe_translation_poetry.job_queue');
  if (!empty($job_gueue->getAllJobs())) {
    // Remove validation since we just need to be redirected to the checkout
    // form regardless.
    $form['#validate'] = [];
    // Disable the checkboxes in the tableselect until the jobs in the queue
    // have been dealt with.
    foreach ($form['languages']['#options'] as $langcode => $option) {
      $form['languages'][$langcode] = [
        '#type' => 'checkbox',
        '#disabled' => TRUE,
      ];
    }
  }
}
